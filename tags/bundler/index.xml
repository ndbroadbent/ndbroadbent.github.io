<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bundler on Made By Nathan</title>
    <link>https://madebynathan.com/tags/bundler/</link>
    <description>Recent content in Bundler on Made By Nathan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 18 Dec 2012 19:56:01 +0000</lastBuildDate>
    
	<atom:link href="https://madebynathan.com/tags/bundler/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automatically run &#39;bundle install&#39; when Bundler can&#39;t find a gem</title>
      <link>https://madebynathan.com/2012/12/18/automatically-run-bundle-install-if-bundler-raises-gemnotfound/</link>
      <pubDate>Tue, 18 Dec 2012 19:56:01 +0000</pubDate>
      
      <guid>https://madebynathan.com/2012/12/18/automatically-run-bundle-install-if-bundler-raises-gemnotfound/</guid>
      <description>Every Rails developer has probably experienced the following error:
Could not find &amp;lt;gem&amp;gt; in any of the sources Run `bundle install` to install missing gems.   This happens if you or someone else adds a gem to your Gemfile, or if a gem version is updated in Gemfile.lock, and you forget to run bundle install before running a Rails command.
Here&amp;rsquo;s a simple function that handles this automatically, called bundle_install_wrapper().</description>
    </item>
    
    <item>
      <title>Don&#39;t use &#39;bundle install {gem}&#39;.</title>
      <link>https://madebynathan.com/2011/09/03/dont-use-bundle-install-gem/</link>
      <pubDate>Sat, 03 Sep 2011 04:39:22 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/09/03/dont-use-bundle-install-gem/</guid>
      <description>Maybe you want to update haml to the latest version. You tried to run bundle install haml, but now some really weird stuff is happening. Bundler decided to install all of your gems from scratch into a ./haml folder. Even when you try bundle update haml, the gems are still going into the ./haml folder! What&amp;rsquo;s going on?
bundle install haml is totally different from bundle update haml.
What bundle install haml does:</description>
    </item>
    
    <item>
      <title>Really handy RVM hook to symlink current gem directory</title>
      <link>https://madebynathan.com/2011/04/28/really-handy-rvm-hook-to-symlink-current-gem-directory/</link>
      <pubDate>Thu, 28 Apr 2011 05:23:44 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/04/28/really-handy-rvm-hook-to-symlink-current-gem-directory/</guid>
      <description>I use gedit to write code. I keep a filebrowser tab open at the left side of my screen, and sometimes I need to look at gem&amp;rsquo;s source code. RVM is awesome, and it keeps my 1.8.7 gems, 1.9.2 gems and all my gemsets separated, but this makes it tricky to find the gem you need to look at.
Enter RVM hooks! If you want a symlink to the current gem directory to be updated each time you switch ruby versions, save something like the following code to ~/.</description>
    </item>
    
    <item>
      <title>Build a ruby gem and host it on rubygems.org in 4 easy steps</title>
      <link>https://madebynathan.com/2011/01/22/how-to-build-a-ruby-gem-and-host-it-on-rubygems-org-in-4-easy-steps/</link>
      <pubDate>Sat, 22 Jan 2011 06:39:39 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/01/22/how-to-build-a-ruby-gem-and-host-it-on-rubygems-org-in-4-easy-steps/</guid>
      <description>Building a ruby gem these days is really, really easy. Bundler provides a great framework generator to get you started. Bundler also lets you install a gem straight from a github repository, so now is the time to say goodbye to your git submodules and start packaging your code into gems.
 Sign up for a rubygems.org account $ bundle gem shiny_new_gem (This creates the framework for your gem) Edit &amp;lsquo;shiny_new_gem.</description>
    </item>
    
    <item>
      <title>How to use bundler with multiple Gemfiles in plugins / extensions</title>
      <link>https://madebynathan.com/2010/10/19/how-to-use-bundler-with-plugins-extensions/</link>
      <pubDate>Tue, 19 Oct 2010 20:37:16 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/10/19/how-to-use-bundler-with-plugins-extensions/</guid>
      <description>Bundler makes it very easy to point to a gem folder on your system, and I definitely recommend this approach a lot more. The plugin can be a gem that we can just require, and it can specify its own dependencies in its .gemspec file.
But if you really don&amp;rsquo;t want your plugin to be a gem, for whatever reason, then read on&amp;hellip;
If we are developing a Spree extension, or a Retrospectiva extension, or a Fat Free CRM plugin, we might sometimes need a way to require the gems in multiple Gemfiles, but Bundler doesn&amp;rsquo;t cater for this.</description>
    </item>
    
  </channel>
</rss>