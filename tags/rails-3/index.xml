<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rails 3 on Made by Nathan</title>
    <link>https://madebynathan.com/tags/rails-3/</link>
    <description>Recent content in Rails 3 on Made by Nathan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 20 Dec 2012 13:02:20 +0000</lastBuildDate>
    
	<atom:link href="https://madebynathan.com/tags/rails-3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Open files generated by &#39;rails generate&#39; in your editor</title>
      <link>https://madebynathan.com/2012/12/20/open-files-generated-by-rails-generate-in-your-editor/</link>
      <pubDate>Thu, 20 Dec 2012 13:02:20 +0000</pubDate>
      
      <guid>https://madebynathan.com/2012/12/20/open-files-generated-by-rails-generate-in-your-editor/</guid>
      <description>Note: This post is for people who use the terminal to run Rails generators. It probably won&amp;rsquo;t interest you if your editor has a plugin to run them. 
After running a Rails generator, you&amp;rsquo;ll often need to edit the generated files in your text editor.
Rails 4 may soon have the ability to open generated files in your text editor if you pass the --editor option on the command line.</description>
    </item>
    
    <item>
      <title>Really handy RVM hook to symlink current gem directory</title>
      <link>https://madebynathan.com/2011/04/28/really-handy-rvm-hook-to-symlink-current-gem-directory/</link>
      <pubDate>Thu, 28 Apr 2011 05:23:44 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/04/28/really-handy-rvm-hook-to-symlink-current-gem-directory/</guid>
      <description>I use gedit to write code. I keep a filebrowser tab open at the left side of my screen, and sometimes I need to look at gem&amp;rsquo;s source code. RVM is awesome, and it keeps my 1.8.7 gems, 1.9.2 gems and all my gemsets separated, but this makes it tricky to find the gem you need to look at.
Enter RVM hooks! If you want a symlink to the current gem directory to be updated each time you switch ruby versions, save something like the following code to ~/.</description>
    </item>
    
    <item>
      <title>Avatar Harmony - Sync your profile pics</title>
      <link>https://madebynathan.com/2011/04/25/avatar-harmony-sync-your-profile-pics/</link>
      <pubDate>Mon, 25 Apr 2011 17:32:50 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/04/25/avatar-harmony-sync-your-profile-pics/</guid>
      <description>I&amp;rsquo;ve written a tiny web application called &amp;lsquo;Avatar Harmony&amp;rsquo;.
You can sign in with twitter or facebook, add your Gravatar login details, and the app will automatically sync your profile pics across each of your accounts.
It can sync avatars in the following directions:
 Facebook =&amp;gt; Twitter Facebook =&amp;gt; Gravatar Twitter =&amp;gt; Gravatar Gravatar =&amp;gt; Twitter  Unfortunately, the Facebook Graph API doesn&#39;t let us update profile pics at the moment, but I&#39;ll keep looking around for a solution.</description>
    </item>
    
    <item>
      <title>Capistrano task - show deployed revisions &amp; diffs</title>
      <link>https://madebynathan.com/2011/03/02/capistrano-task-show-deployed-revisions-diffs/</link>
      <pubDate>Wed, 02 Mar 2011 05:43:35 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/03/02/capistrano-task-show-deployed-revisions-diffs/</guid>
      <description>Capistrano is a great tool, and I couldn&amp;rsquo;t imagine running a project without it. I always wanted a quick way to know exactly what was running on each of our servers, and needed to know what would would change when I ran &amp;lsquo;cap deploy&amp;rsquo;.
&amp;ldquo;cap deploy:pending&amp;rdquo; and &amp;ldquo;cap deploy:pending:diff&amp;rdquo; already solve this problem a little bit, but I found them to be too verbose. Also, they don&amp;rsquo;t work so well as part of an automated deploy process since they can require user interaction.</description>
    </item>
    
    <item>
      <title>Rails 3 Rake tasks can take too long to load</title>
      <link>https://madebynathan.com/2011/02/24/rails-3-rake-tasks-are-so-slow/</link>
      <pubDate>Thu, 24 Feb 2011 05:02:15 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/02/24/rails-3-rake-tasks-are-so-slow/</guid>
      <description>When you run a rake task for a Rails 3 project, it has to load the entire environment since gems can include their own rake tasks. I started to get annoyed by this, because every capistrano deployment would load up rails on my environment just to notify hoptoad.
If you have a very simple rake task that is called very often, you might want to add some work-around code to check for it in the very beginning of your Rakefile.</description>
    </item>
    
    <item>
      <title>Rails 3 caching views in development mode</title>
      <link>https://madebynathan.com/2011/02/10/rails3-is-caching-views-in-development-mode-but-i-told-it-not-to/</link>
      <pubDate>Thu, 10 Feb 2011 03:40:52 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/02/10/rails3-is-caching-views-in-development-mode-but-i-told-it-not-to/</guid>
      <description>We are working with a Rails 3 port of Fat Free CRM. We have so many plugins modifying classes that we have to set config.cache_classes to true. But all our view templates seemed to stay cached as well, and I had to restart the server each time I made a change to a template. I couldn&amp;rsquo;t really explain why this was happening, and after a lot of searching I came across this Rails LightHouse ticket.</description>
    </item>
    
    <item>
      <title>RSpec tasks on Rails 3</title>
      <link>https://madebynathan.com/2010/09/25/rspec-tasks-on-rails-3/</link>
      <pubDate>Sat, 25 Sep 2010 19:51:35 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/09/25/rspec-tasks-on-rails-3/</guid>
      <description>Problem: uninitialized constant RSpec::Rake
Solution:
You are using rails 3 (and rspec 2), and trying to define a custom rake task with Spec::Rake::SpecTask.new
Instead, do:
RSpec::Core::RakeTask.new(:spec) do |t| ...  and make sure to change:
t.spec_files = FileList[&amp;#39;spec/**/*_spec.rb&amp;#39;]  to
t.pattern = &amp;#39;spec/**/*_spec.rb&amp;#39;  </description>
    </item>
    
  </channel>
</rss>