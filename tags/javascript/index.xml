<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Made By Nathan</title>
    <link>https://madebynathan.com/tags/javascript/</link>
    <description>Recent content in Javascript on Made By Nathan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 12 Feb 2018 01:34:40 +0700</lastBuildDate>
    
	<atom:link href="https://madebynathan.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What I Learned While Making a Game With React Native</title>
      <link>https://madebynathan.com/posts/2018-02-12-what-i-learned-while-making-a-game-with-react-native/</link>
      <pubDate>Mon, 12 Feb 2018 01:34:40 +0700</pubDate>
      
      <guid>https://madebynathan.com/posts/2018-02-12-what-i-learned-while-making-a-game-with-react-native/</guid>
      <description>.blogpost h1 { font-size: 28px; margin-bottom: 20px; margin-top: 40px; }  I used React Native to build a cross-platform game for iOS, Android, Windows, and the web. SudoBlock is a cross between Sudoku, jigsaw puzzles, and Tetris.
You can find SudoBlock on the web, App Store, Google Play, and the Microsoft Store.

React Native only supports iOS and Android, but I used react-native-web for the browser, and react-native-windows for Windows desktop and phone.</description>
    </item>
    
    <item>
      <title>Grooveshark - Set Current Song as Browser Title</title>
      <link>https://madebynathan.com/2010/11/04/grooveshark-set-current-song-as-browser-title/</link>
      <pubDate>Thu, 04 Nov 2010 19:07:51 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/11/04/grooveshark-set-current-song-as-browser-title/</guid>
      <description>I like Grooveshark. Its like last.fm, but you can choose the songs &amp;amp; albums you want to play. I would like to get a subscription one day, but I&amp;rsquo;m not sure when the RIAA is planning their attack, so maybe I&amp;rsquo;ll hold off for now :)
In the meantime, I was dissapointed that I couldn&amp;rsquo;t see which song was currently playing in the browser title. So heres a greasemonkey script to do just that:</description>
    </item>
    
    <item>
      <title>obscure jqGrid API notes</title>
      <link>https://madebynathan.com/2010/05/06/obscure-jqgrid-api-notes/</link>
      <pubDate>Thu, 06 May 2010 15:33:06 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/05/06/obscure-jqgrid-api-notes/</guid>
      <description>If you are using an older version of jqGrid because it comes nicely wrapped up in the jquery-grid-rails-plugin, keep in mind that all the demo code is written with the new API introduced in version 3.6. Fortunately, most of the demo code can still be reused with our version of jqGrid (3.5). Just get rid of any &amp;ldquo;jqGrid(&amp;rsquo; ** &amp;lsquo;)&amp;rdquo; function wrappers, and everything should work fine. (I find this easier to do than rewriting the rails plugin for the new version)</description>
    </item>
    
  </channel>
</rss>