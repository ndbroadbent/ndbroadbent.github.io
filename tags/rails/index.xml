<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rails on Made by Nathan</title>
    <link>https://madebynathan.com/tags/rails/</link>
    <description>Recent content in Rails on Made by Nathan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 10 Jul 2013 23:51:47 +0000</lastBuildDate>
    
	<atom:link href="https://madebynathan.com/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi Microwave</title>
      <link>https://madebynathan.com/2013/07/10/raspberry-pi-powered-microwave/</link>
      <pubDate>Wed, 10 Jul 2013 23:51:47 +0000</pubDate>
      
      <guid>https://madebynathan.com/2013/07/10/raspberry-pi-powered-microwave/</guid>
      <description>A few months ago, I was inspired by this post on Reddit, titled: Food items should have QR codes that instruct the microwave exactly what to do. Like high for 2 minutes, let stand 1 minute, medium 1 minutes..
I thought this was a pretty cool idea, and that it would be a fun project for a Raspberry Pi. I agreed with the people who thought using UPC barcodes would be better, since products already have them, so I went with a barcode scanner + online product database.</description>
    </item>
    
    <item>
      <title>Ubuntu Keyboard Shortcut: Open a selected file in Sublime Text 2</title>
      <link>https://madebynathan.com/2013/03/29/keyboard-shortcut-to-open-selected-file-in-sublime-text-2/</link>
      <pubDate>Fri, 29 Mar 2013 23:44:58 +0000</pubDate>
      
      <guid>https://madebynathan.com/2013/03/29/keyboard-shortcut-to-open-selected-file-in-sublime-text-2/</guid>
      <description>Whenever I&amp;rsquo;m looking at backtraces, logs, or failing tests in the terminal, I often need to open one of those files in my text editor. It was previously a semi-arduous process that involved highlighting, copying, pasting and the return key. Now, all I need to do is double-click or highlight a line, and then press a keyboard shortcut to open that file &amp;amp; line in my text editor (currently Sublime Text 2.</description>
    </item>
    
    <item>
      <title>Open files generated by &#39;rails generate&#39; in your editor</title>
      <link>https://madebynathan.com/2012/12/20/open-files-generated-by-rails-generate-in-your-editor/</link>
      <pubDate>Thu, 20 Dec 2012 13:02:20 +0000</pubDate>
      
      <guid>https://madebynathan.com/2012/12/20/open-files-generated-by-rails-generate-in-your-editor/</guid>
      <description>Note: This post is for people who use the terminal to run Rails generators. It probably won&amp;rsquo;t interest you if your editor has a plugin to run them. 
After running a Rails generator, you&amp;rsquo;ll often need to edit the generated files in your text editor.
Rails 4 may soon have the ability to open generated files in your text editor if you pass the --editor option on the command line.</description>
    </item>
    
    <item>
      <title>Automatically run &#39;bundle install&#39; when Bundler can&#39;t find a gem</title>
      <link>https://madebynathan.com/2012/12/18/automatically-run-bundle-install-if-bundler-raises-gemnotfound/</link>
      <pubDate>Tue, 18 Dec 2012 19:56:01 +0000</pubDate>
      
      <guid>https://madebynathan.com/2012/12/18/automatically-run-bundle-install-if-bundler-raises-gemnotfound/</guid>
      <description>Every Rails developer has probably experienced the following error:
Could not find &amp;lt;gem&amp;gt; in any of the sources Run `bundle install` to install missing gems.   This happens if you or someone else adds a gem to your Gemfile, or if a gem version is updated in Gemfile.lock, and you forget to run bundle install before running a Rails command.
Here&amp;rsquo;s a simple function that handles this automatically, called bundle_install_wrapper().</description>
    </item>
    
    <item>
      <title>capistrano_colors has been merged into capistrano</title>
      <link>https://madebynathan.com/2012/11/08/capistrano_colors-has-been-merged-into-capistrano/</link>
      <pubDate>Thu, 08 Nov 2012 12:55:17 +0000</pubDate>
      
      <guid>https://madebynathan.com/2012/11/08/capistrano_colors-has-been-merged-into-capistrano/</guid>
      <description>capistrano_colors has been merged into capistrano. If you update capistrano to version 2.13.5, you will no longer need to include capistrano_colors in your Gemfile.Don&amp;rsquo;t forget to also remove require &#39;capistrano_colors&#39; from config/deploy.rb.
If you&amp;rsquo;ve been using capistrano without the capistrano_colors gem, well, you&amp;rsquo;ve been missing out! Your logs will now be nicely formatted and colored by default, like this:
However, if you happen to be a big fan of black &amp;amp; white logs, you can just add disable_log_formatters to config/deploy.</description>
    </item>
    
    <item>
      <title>Automate your Rails development with cron: Keep projects updated, install gems, and maintain a repo index</title>
      <link>https://madebynathan.com/2012/10/11/automate-your-development-machine-keep-projects-updated-install-gems-refresh-git-repo-index/</link>
      <pubDate>Thu, 11 Oct 2012 14:56:54 +0000</pubDate>
      
      <guid>https://madebynathan.com/2012/10/11/automate-your-development-machine-keep-projects-updated-install-gems-refresh-git-repo-index/</guid>
      <description>A day in the life of a Rails developer will usually involve a few git pulls, bundle installs, and switching between different projects. I thought it would be great if my projects could be automatically kept up-to-date, so that I don&amp;rsquo;t have to spend too much time updating code or installing new gems.
I&amp;rsquo;m using the whenever gem to create cron tasks that:
 Update all my git repos from their remotes Satisfy all of my Gemfile&amp;rsquo;s dependencies Cache rake and capistrano commands for tab completion Fetch Travis CI build statuses to show in my terminal Maintain an index of my git repos so I can quickly switch between projects, while keeping them organized  For all of these tasks, I&amp;rsquo;m using the git_index function provided by my SCM Breeze project.</description>
    </item>
    
    <item>
      <title>Testing Multiple Databases for a Rails app on Travis CI</title>
      <link>https://madebynathan.com/2011/12/13/testing-multiple-databases-for-a-rails-app-on-travis-ci/</link>
      <pubDate>Tue, 13 Dec 2011 23:12:50 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/12/13/testing-multiple-databases-for-a-rails-app-on-travis-ci/</guid>
      <description>I&amp;rsquo;m currently doing a lot of work on an open source Ruby on Rails project called Fat Free CRM. The code is hosted on github, and we are using the amazing continuous integration service provided by Travis CI.
Find out more about Travis CI here.
We&amp;rsquo;ve been working on some powerful features for Fat Free CRM, such as dynamic custom fields, and we wanted to make sure that they work across all of our supported databases.</description>
    </item>
    
    <item>
      <title>Really handy RVM hook to symlink current gem directory</title>
      <link>https://madebynathan.com/2011/04/28/really-handy-rvm-hook-to-symlink-current-gem-directory/</link>
      <pubDate>Thu, 28 Apr 2011 05:23:44 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/04/28/really-handy-rvm-hook-to-symlink-current-gem-directory/</guid>
      <description>I use gedit to write code. I keep a filebrowser tab open at the left side of my screen, and sometimes I need to look at gem&amp;rsquo;s source code. RVM is awesome, and it keeps my 1.8.7 gems, 1.9.2 gems and all my gemsets separated, but this makes it tricky to find the gem you need to look at.
Enter RVM hooks! If you want a symlink to the current gem directory to be updated each time you switch ruby versions, save something like the following code to ~/.</description>
    </item>
    
    <item>
      <title>Avatar Harmony - Sync your profile pics</title>
      <link>https://madebynathan.com/2011/04/25/avatar-harmony-sync-your-profile-pics/</link>
      <pubDate>Mon, 25 Apr 2011 17:32:50 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/04/25/avatar-harmony-sync-your-profile-pics/</guid>
      <description>I&amp;rsquo;ve written a tiny web application called &amp;lsquo;Avatar Harmony&amp;rsquo;.
You can sign in with twitter or facebook, add your Gravatar login details, and the app will automatically sync your profile pics across each of your accounts.
It can sync avatars in the following directions:
 Facebook =&amp;gt; Twitter Facebook =&amp;gt; Gravatar Twitter =&amp;gt; Gravatar Gravatar =&amp;gt; Twitter  Unfortunately, the Facebook Graph API doesn&#39;t let us update profile pics at the moment, but I&#39;ll keep looking around for a solution.</description>
    </item>
    
    <item>
      <title>Capistrano task - show deployed revisions &amp; diffs</title>
      <link>https://madebynathan.com/2011/03/02/capistrano-task-show-deployed-revisions-diffs/</link>
      <pubDate>Wed, 02 Mar 2011 05:43:35 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/03/02/capistrano-task-show-deployed-revisions-diffs/</guid>
      <description>Capistrano is a great tool, and I couldn&amp;rsquo;t imagine running a project without it. I always wanted a quick way to know exactly what was running on each of our servers, and needed to know what would would change when I ran &amp;lsquo;cap deploy&amp;rsquo;.
&amp;ldquo;cap deploy:pending&amp;rdquo; and &amp;ldquo;cap deploy:pending:diff&amp;rdquo; already solve this problem a little bit, but I found them to be too verbose. Also, they don&amp;rsquo;t work so well as part of an automated deploy process since they can require user interaction.</description>
    </item>
    
    <item>
      <title>Rails 3 Rake tasks can take too long to load</title>
      <link>https://madebynathan.com/2011/02/24/rails-3-rake-tasks-are-so-slow/</link>
      <pubDate>Thu, 24 Feb 2011 05:02:15 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/02/24/rails-3-rake-tasks-are-so-slow/</guid>
      <description>When you run a rake task for a Rails 3 project, it has to load the entire environment since gems can include their own rake tasks. I started to get annoyed by this, because every capistrano deployment would load up rails on my environment just to notify hoptoad.
If you have a very simple rake task that is called very often, you might want to add some work-around code to check for it in the very beginning of your Rakefile.</description>
    </item>
    
    <item>
      <title>Rails 3 caching views in development mode</title>
      <link>https://madebynathan.com/2011/02/10/rails3-is-caching-views-in-development-mode-but-i-told-it-not-to/</link>
      <pubDate>Thu, 10 Feb 2011 03:40:52 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/02/10/rails3-is-caching-views-in-development-mode-but-i-told-it-not-to/</guid>
      <description>We are working with a Rails 3 port of Fat Free CRM. We have so many plugins modifying classes that we have to set config.cache_classes to true. But all our view templates seemed to stay cached as well, and I had to restart the server each time I made a change to a template. I couldn&amp;rsquo;t really explain why this was happening, and after a lot of searching I came across this Rails LightHouse ticket.</description>
    </item>
    
    <item>
      <title>Build a ruby gem and host it on rubygems.org in 4 easy steps</title>
      <link>https://madebynathan.com/2011/01/22/how-to-build-a-ruby-gem-and-host-it-on-rubygems-org-in-4-easy-steps/</link>
      <pubDate>Sat, 22 Jan 2011 06:39:39 +0000</pubDate>
      
      <guid>https://madebynathan.com/2011/01/22/how-to-build-a-ruby-gem-and-host-it-on-rubygems-org-in-4-easy-steps/</guid>
      <description>Building a ruby gem these days is really, really easy. Bundler provides a great framework generator to get you started. Bundler also lets you install a gem straight from a github repository, so now is the time to say goodbye to your git submodules and start packaging your code into gems.  Sign up for a rubygems.org account $ bundle gem shiny_new_gem (This creates the framework for your gem) Edit &amp;lsquo;shiny_new_gem.</description>
    </item>
    
    <item>
      <title>How to use bundler with multiple Gemfiles in plugins / extensions</title>
      <link>https://madebynathan.com/2010/10/19/how-to-use-bundler-with-plugins-extensions/</link>
      <pubDate>Tue, 19 Oct 2010 20:37:16 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/10/19/how-to-use-bundler-with-plugins-extensions/</guid>
      <description>Bundler makes it very easy to point to a gem folder on your system, and I definitely recommend this approach a lot more. The plugin can be a gem that we can just require, and it can specify its own dependencies in its .gemspec file.
But if you really don&amp;rsquo;t want your plugin to be a gem, for whatever reason, then read on&amp;hellip;
If we are developing a Spree extension, or a Retrospectiva extension, or a Fat Free CRM plugin, we might sometimes need a way to require the gems in multiple Gemfiles, but Bundler doesn&amp;rsquo;t cater for this.</description>
    </item>
    
    <item>
      <title>RSpec tasks on Rails 3</title>
      <link>https://madebynathan.com/2010/09/25/rspec-tasks-on-rails-3/</link>
      <pubDate>Sat, 25 Sep 2010 19:51:35 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/09/25/rspec-tasks-on-rails-3/</guid>
      <description>Problem: uninitialized constant RSpec::Rake
Solution:
You are using rails 3 (and rspec 2), and trying to define a custom rake task with Spec::Rake::SpecTask.new
Instead, do:
RSpec::Core::RakeTask.new(:spec) do |t| ...  and make sure to change:
t.spec_files = FileList[&amp;#39;spec/**/*_spec.rb&amp;#39;]  to
t.pattern = &amp;#39;spec/**/*_spec.rb&amp;#39;  </description>
    </item>
    
    <item>
      <title>Don&amp;#039;t override core Rails methods</title>
      <link>https://madebynathan.com/2010/05/28/dont-override-core-rails-methods/</link>
      <pubDate>Fri, 28 May 2010 14:55:05 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/05/28/dont-override-core-rails-methods/</guid>
      <description>Every programmer makes mistakes.. But every so often though, you make those mistakes that really mess things up. I just made two of them, and feel like a right n00b.
Both mistakes simply involved overwriting ActiveRecord methods. The first time, I made an &amp;lsquo;update&amp;rsquo; method in my model. And just recently, I realized that I had made a named_scope called &amp;lsquo;new&amp;rsquo; for another model.
NEVER use method names such as &amp;lsquo;create&amp;rsquo;, &amp;lsquo;update&amp;rsquo;, &amp;lsquo;new&amp;rsquo;, or &amp;lsquo;destroy&amp;rsquo; in ANY of your models.</description>
    </item>
    
    <item>
      <title>obscure jqGrid API notes</title>
      <link>https://madebynathan.com/2010/05/06/obscure-jqgrid-api-notes/</link>
      <pubDate>Thu, 06 May 2010 15:33:06 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/05/06/obscure-jqgrid-api-notes/</guid>
      <description>If you are using an older version of jqGrid because it comes nicely wrapped up in the jquery-grid-rails-plugin, keep in mind that all the demo code is written with the new API introduced in version 3.6. Fortunately, most of the demo code can still be reused with our version of jqGrid (3.5). Just get rid of any &amp;ldquo;jqGrid(&amp;rsquo; ****** &amp;lsquo;)&amp;rdquo; function wrappers, and everything should work fine. (I find this easier to do than rewriting the rails plugin for the new version)</description>
    </item>
    
    <item>
      <title>jqgrid on Spree</title>
      <link>https://madebynathan.com/2010/04/30/jqgrid-on-spree/</link>
      <pubDate>Fri, 30 Apr 2010 17:22:57 +0000</pubDate>
      
      <guid>https://madebynathan.com/2010/04/30/jqgrid-on-spree/</guid>
      <description>Been a fan of jqgrid for quite some time, but wasn&amp;rsquo;t looking forward to the struggle of getting it to work with Rails.
Thankfully, someones already done it for me: http://www.2dconcept.com/jquery-grid-rails-plugin
It did take a little while to debug some things that were going wrong, though. Firebug was giving me the error: $.jgrid.formatter is undefined. After some digging around, I realized that no jqgrid locale files were being loaded.
By default, Spree has its i18n locale set to &amp;ldquo;en-US&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>